{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Buffer","require","bitcoin","base58check","timeConverter","UNIX_timestamp","a","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","decodeBase64","key","keyBuf","from","toString","namespaceToHex","nsStr","decode","reverse","src","buffer","alloc","length","i","j","App","ws","useRef","useState","list","setList","useEffect","current","WebSocket","onmessage","event","console","log","data","JSON","parse","result","resultList","keyvalues","map","r","value","onWSData","namespace","setNamespace","listComp","e","index","className","time","type","placeholder","style","marginRight","onChange","currentTarget","onClick","scriptHash","namespaceId","isBase58","emptyBuffer","bscript","script","nsScript","compile","OPS","OP_2DROP","OP_DROP","OP_RETURN","hash","crypto","sha256","getNamespaceScriptHash","send","err","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aeb100ca.chunk.js","sourcesContent":["import './App.css';\nimport React, { useEffect, useState, useRef } from 'react';\nconst Buffer = require('buffer').Buffer;\nconst bitcoin = require('bitcoinjs-lib');\nconst base58check = require('bs58check')\n\nconst KEVA_OP_NAMESPACE = 0xd0;\nconst KEVA_OP_PUT = 0xd1;\nconst KEVA_OP_DELETE = 0xd2;\n\nfunction timeConverter(UNIX_timestamp) {\n  let a = new Date(UNIX_timestamp * 1000);\n  let year = a.getFullYear();\n  let month = a.getMonth() + 1;\n  let date = a.getDate();\n  let hour = a.getHours();\n  let min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes();\n  let sec = a.getSeconds() < 10 ? '0' + a.getSeconds() : a.getSeconds();\n  let timeStr = year + '-' + month + '-' + date + ' ' + hour + ':' + min + ':' + sec ;\n  return timeStr;\n}\n\nfunction decodeBase64(key) {\n  if (!key) {\n    return '';\n  }\n\n  const keyBuf = Buffer.from(key, 'base64');\n  if (keyBuf[0] < 10) {\n    // Special protocol, not a valid utf-8 string.\n    return keyBuf;\n  }\n  return keyBuf.toString('utf-8');\n}\n\nfunction namespaceToHex(nsStr) {\n  if (!nsStr) {\n    return \"\";\n  }\n  return base58check.decode(nsStr);\n}\n\nfunction reverse(src) {\n  let buffer = Buffer.alloc(src.length)\n\n  for (let i = 0, j = src.length - 1; i <= j; ++i, --j) {\n    buffer[i] = src[j]\n    buffer[j] = src[i]\n  }\n\n  return buffer\n}\n\nfunction getNamespaceScriptHash(namespaceId, isBase58 = true) {\n  const emptyBuffer = Buffer.alloc(0);\n  let bscript = bitcoin.script;\n  let nsScript = bscript.compile([\n    KEVA_OP_PUT,\n    isBase58 ? namespaceToHex(namespaceId) : Buffer.from(namespaceId, \"hex\"),\n    emptyBuffer,\n    bscript.OPS.OP_2DROP,\n    bscript.OPS.OP_DROP,\n    bscript.OPS.OP_RETURN]);\n  let hash = bitcoin.crypto.sha256(nsScript);\n  let reversedHash = Buffer.from(reverse(hash));\n  return reversedHash.toString('hex');\n}\n\nfunction App() {\n\n  const ws = useRef(null);\n  const [list, setList] = useState([]);\n\n  const onWSData = (event) => {\n    console.log(event)\n    const data = JSON.parse(event.data)\n    console.log(data.result);\n    const resultList = data.result.keyvalues.map(r => {\n      r.key = decodeBase64(r.key);\n      r.value = decodeBase64(r.value);\n      return r;\n    });\n    console.log(resultList)\n    setList(resultList);\n  }\n\n  useEffect(() => {\n    ws.current = new WebSocket(\"wss://ec0.kevacoin.org:8443\");\n    ws.current.onmessage = (event) => {\n      onWSData(event);\n    };\n  }, []);\n\n  const [namespace, setNamespace] = useState('');\n\n  const onSubmit = event => {\n    try {\n      const scriptHash = getNamespaceScriptHash(namespace, true);\n      ws.current.send(`{\"id\": 1, \"method\": \"blockchain.keva.get_keyvalues\", \"params\": [\"${scriptHash}\", -1]}`);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const onChange = event => {\n    setNamespace(event.currentTarget.value);\n  }\n\n  const listComp = list.map((e, index) => {\n    return (\n      <div className=\"ns-key-value\" key={index}>\n        <p className=\"ns-key\">{e.key}</p>\n        <p className=\"ns-time\">{timeConverter(e.time)}</p>\n        <p className=\"ns-value\">{e.value}</p>\n        <br/>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          <input className=\"ns-input\" type=\"text\" placeholder=\"Namespace ID, e.g. Nfw2WYkGoSKve74cCfEum67x8bFgpHygxg\" style={{marginRight: 10}} onChange={onChange}/>\n          <button className=\"ns-button\" onClick={onSubmit}>Go</button>\n        </div>\n        { listComp }\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}